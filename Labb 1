ldi r16,HIGH(RAMEND) ;sätter stackpekaren
out SPH,r16
ldi r16,LOW(RAMEND)
out SPL,r16
rcall INIT ;konf B som utgång
clr r19

STARTBIT:
sbis PINA,0
rjmp STARTBIT
rcall DELAY ;om känt av 1
sbis PINA, 0 ;kolla att det fortfarande är 1, kolla om giltig
rjmp STARTBIT
;rcall DELAY_TWO ;vänta T

DATABIT:
lsl r19
clr r22
rcall DELAY_TWO
sbic PINA,0 ; skip nästa instruktion om bit 0 är nollställd
ldi r22,$01
add r19,r22
ldi r21,$04 ;vår räknare som räknar ner
dec r21
brne DATABIT ;kollar om z=0, loopa om tills z=1 då resultatet är noll
PRINT:
ldi r21,$04
out PORTB,r19
rjmp STARTBIT

INIT:
cbi DDRA,0
ldi r16,$8F
out DDRB, r16

ldi r16,$0
ret

DELAY: ;delay T/2
sbi PORTB,7
ldi r16, 10
delayYttreLoop:
ldi r17,$1F
delayInreLoop:
dec r17
brne delayInreLoop
dec r16
brne delayYttreLoop
cbi PORTB, 7
ret

DELAY_TWO:
rcall DELAY
rcall DELAY
ret
